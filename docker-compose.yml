services:
  ui:
    build:
      context: ./wishr-ui
    volumes:
      - /etc/ssl:/etc/ssl
    ports:
      - "3000:80" # Map container port to host port for UI
    networks:
      - wishr-network
    depends_on:
      - api # Wait for api to be up
    restart: unless-stopped
  api:
    build:
      context: ./wishr-api
    volumes:
      - ./storage:/storage
    ports:
      - "3001:3001" # Map container port to host port for API
    networks:
      - wishr-network
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
  postgres:
    build:
      context: ./wishr-db
    ports:
      - "3002:5432" # Map container port to host port
    networks:
      - wishr-network
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data      # Persistent database data
      - ./storage:/backups  
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 15

volumes:
  postgres-data:
    driver: local

networks:
  wishr-network:
    ipam:
      config:
        - subnet: "172.22.0.0/16"
